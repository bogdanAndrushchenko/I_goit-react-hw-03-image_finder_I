{"version":3,"sources":["Component/SearchForm/SearchForm.jsx","Component/Searchbar/Searchbar.jsx","Component/Loaders/Loader/Loader.jsx","Component/Loaders/ Magnifier/ Magnifier.jsx","Component/Button/Button.jsx","Component/Modal/Modal.jsx","Component/ImageGalleryItem/ImageGalleryItem.jsx","API_service/api_service.js","Component/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["INITIAL_STATE_FORM","searchImage","SearchForm","state","handleInputChange","e","value","currentTarget","setState","toLowerCase","handleSubmitForm","preventDefault","onFormSubmit","props","trim","resetForm","toast","dark","autoClose","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","name","onChange","Component","Searchbar","Loader","Magnifier","title","Button","onLoadMore","onClick","modalRoot","document","getElementById","Modal","handleCloseModal","onClose","code","target","window","addEventListener","removeEventListener","url","alt","createPortal","src","ImageGalleryItem","modal","toggleModal","setOptionsModal","dataset","source","images","map","id","webformatURL","largeImageURL","tags","data-source","api_service","per_page","APIkey","baseURL","getResource","search","page","fetch","responce","ok","json","Promise","reject","Error","error","ImageGallery","status","currentPage","getAPI","query","ari_service","then","hits","length","prevState","catch","scrollToNextPage","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","message","App","handleFormSearch","ReactDOM","render","StrictMode"],"mappings":"oaAMMA,G,MAAqB,CACzBC,YAAa,KAwDAC,E,4MAhDbC,M,eACKH,G,EAGLI,kBAAoB,SAAAC,GAAM,IAChBC,EAAUD,EAAEE,cAAZD,MACR,EAAKE,SAAS,CAAEP,YAAaK,EAAMG,iB,EAGrCC,iBAAmB,SAAAL,GACjBA,EAAEM,iBADoB,IAEdC,EAAiB,EAAKC,MAAtBD,aACAX,EAAgB,EAAKE,MAArBF,YACmB,KAAvBA,EAAYa,QAIhBF,EAAaX,GACb,EAAKc,aAJHC,IAAMC,KAAK,uBAAwB,CAAEC,UAAW,O,EAOpDH,UAAY,WACV,EAAKP,SAAL,eAAmBR,K,uDAGX,IACAC,EAAgBkB,KAAKhB,MAArBF,YACR,OACE,uBAAMmB,UAAU,aAAaC,SAAUF,KAAKT,iBAA5C,UACE,wBAAQY,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,KAAK,cACLpB,MAAOL,EACP0B,SAAUR,KAAKf,2B,GA9CAwB,aCQVC,G,MAZG,SAAC,GAAsB,IAApBjB,EAAmB,EAAnBA,aACnB,OACE,wBAAQQ,UAAU,YAAlB,SACE,cAAC,EAAD,CAAYR,aAAcA,Q,QCYjBkB,G,MAnBA,WACb,OACE,sBAAKV,UAAU,cAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,6BCUSW,G,MAtBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,sBAAKZ,UAAU,YAAf,UACE,6BAAKY,IACL,qBAAKZ,UAAU,wCAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,8BACE,gCACE,wBACA,sCCGCa,G,MAZA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACb,OACI,wBAAQZ,KAAK,SAASF,UAAU,SAASe,QAASD,EAAlD,yBCAFE,G,YAAYC,SAASC,eAAe,gBAoC3BC,E,4MArBbC,iBAAmB,SAAAnC,GAAM,IACfoC,EAAY,EAAK5B,MAAjB4B,QACAC,EAAgCrC,EAAhCqC,KAAMC,EAA0BtC,EAA1BsC,OAAQpC,EAAkBF,EAAlBE,cACT,WAATmC,GAAqBnC,IAAkBoC,GACzCF,K,kEAXFG,OAAOC,iBAAiB,UAAW1B,KAAKqB,oB,6CAIxCI,OAAOE,oBAAoB,UAAW3B,KAAKqB,oB,+BAWnC,IAAD,EACcrB,KAAKN,MAAlBkC,EADD,EACCA,IAAKC,EADN,EACMA,IACb,OAAOC,uBACL,qBAAK7B,UAAU,UAAUe,QAAShB,KAAKqB,iBAAvC,SACE,qBAAKpB,UAAU,QAAf,SACE,qBAAK8B,IAAKH,EAAKC,IAAKA,QAGxBZ,O,GA7BcR,aCuDLuB,E,4MApDbhD,MAAQ,CACNiD,OAAO,EACPL,IAAK,GACLC,IAAK,I,EAGPK,YAAc,WACZ,EAAK7C,UAAS,kBAAgB,CAC5B4C,OADY,EAAGA,W,EAKnBE,gBAAkB,SAAAjD,GAAM,IAAD,EACIA,EAAEsC,OAAnBY,EADa,EACbA,QAASP,EADI,EACJA,IAEjB,EAAKxC,SAAS,CACZuC,IAAKQ,EAAQC,OACbR,IAAKA,K,uDAIC,IAAD,OACCS,EAAWtC,KAAKN,MAAhB4C,OADD,EAEqBtC,KAAKhB,MAAzBiD,EAFD,EAECA,MAAOL,EAFR,EAEQA,IAAKC,EAFb,EAEaA,IACpB,OACE,qCACE,oBAAI5B,UAAU,eAAd,SACGqC,GACCA,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAApC,OACT,oBACE1C,UAAU,mBAEVe,QAAS,SAAA9B,GACP,EAAKgD,cACL,EAAKC,gBAAgBjD,IALzB,SAQE,qBACE6C,IAAKU,EACLZ,IAAKc,EACLC,cAAaF,EACbzC,UAAU,4BAVPuC,QAeZP,GAAS,cAAC,EAAD,CAAOL,IAAKA,EAAKC,IAAKA,EAAKP,QAAStB,KAAKkC,qB,GAnD5BzB,a,wBCgBhBoC,EApBK,CAClBC,SAAU,GACVC,OAAQ,qCACRC,QAAS,mEACHC,YAJY,SAIAC,EAAQC,GAAO,IAAD,iJAELC,MAAM,GAAD,OACvB,EAAKJ,QADkB,cACLE,EADK,iBACUC,EADV,qBAC2B,EAAKL,SADhC,gBACgD,EAAKC,SAHrD,YAEtBM,EAFsB,QAKfC,GALe,gCAMbD,EAASE,OANI,wEAQrBC,QAAQC,OAAO,IAAIC,MAAJ,8EAA0BR,EAA1B,iCARM,wCAUtBrD,IAAM8D,MAAN,KAAmB,CACvB5D,UAAW,MAXe,8DC6FnB6D,G,kNAnFX5E,MAAQ,CACJsD,OAAQ,GACRqB,MAAO,KACPE,OAAQ,OACRC,YAAa,G,EAuBjBC,OAAS,WAAO,IACLC,EAAS,EAAKtE,MAAdsE,MACAF,EAAe,EAAK9E,MAApB8E,YACPG,EACKhB,YAAYe,EAAOF,GACnBI,MAAK,SAAA5B,GAAW,IACN6B,EAAQ7B,EAAR6B,KACP,GAAoB,IAAhBA,EAAKC,OAGL,OAFAvE,IAAM8D,MAAM,QAAS,CAAC5D,UAAW,WACjC,EAAKV,SAAS,CAACwE,OAAQ,aAI3B,EAAKxE,UAAS,SAAAgF,GAAS,MAAK,CACxB/B,OAAO,GAAD,mBAAM+B,EAAU/B,QAAhB,YAA2B6B,IACjCN,OAAQ,WACRC,YAAaO,EAAUP,YAAc,SAG5CQ,OAAM,SAAAX,GAAK,OAAI,EAAKtE,SAAS,CAACsE,QAAOE,OAAQ,iB,EAGtDU,iBAAmB,WACf9C,OAAO+C,SAAS,CACZC,IAAKvD,SAASwD,gBAAgBC,aAC9BC,SAAU,Y,iEA7CCC,EAAWR,GAAY,IAC/BL,EAAShE,KAAKN,MAAdsE,MACAF,EAAe9D,KAAKhB,MAApB8E,YAEHe,EAAUb,QAAUA,GACpBhE,KAAKX,SACD,CACIwE,OAAQ,UACRvB,OAAQ,GACRwB,YAAa,GAEjB9D,KAAK+D,QAITM,EAAUP,cAAgBA,GAC1B9D,KAAKuE,qB,+BAiCH,IAAD,EAC2BvE,KAAKhB,MAA9BsD,EADF,EACEA,OAAQqB,EADV,EACUA,MAAOE,EADjB,EACiBA,OAEtB,MAAe,SAAXA,EACO,cAAC,EAAD,CAAWhD,MAAO,2KACd,YAAXgD,EAA6B,cAAC,EAAD,IAClB,aAAXA,EAEI,mCACKF,EACMA,EAAMmB,QACN,cAAC,EAAD,CAAWjE,MAAO,8IAKtB,aAAXgD,EAEI,qCACI,cAAC,EAAD,CAAkBvB,OAAQA,IACzBA,EAAO8B,OAAS,GAAK,cAAC,EAAD,CAAQrD,WAAYf,KAAK+D,iBAJ3D,M,GA7EmBtD,cCmBZsE,G,wNArBb/F,MAAQ,CACNF,YAAa,I,EAGfkG,iBAAmB,SAAAlG,GACjB,EAAKO,SAAS,CAAEP,iB,uDAGR,IACAA,EAAgBkB,KAAKhB,MAArBF,YACR,OACE,sBAAKmB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWR,aAAcO,KAAKgF,mBAC9B,cAAC,EAAD,CAAchB,MAAOlF,IAErB,cAAC,IAAD,W,GAhBU2B,cCHlBwE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASC,eAAe,W","file":"static/js/main.d7219def.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport './SearchForm.scss';\n\nconst INITIAL_STATE_FORM = {\n  searchImage: '',\n};\n\nclass SearchForm extends Component {\n  static propTypes = {\n    onFormSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE_FORM,\n  };\n\n  handleInputChange = e => {\n    const { value } = e.currentTarget;\n    this.setState({ searchImage: value.toLowerCase() });\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const { onFormSubmit } = this.props;\n    const { searchImage } = this.state;\n    if (searchImage.trim() === '') {\n      toast.dark('Please enter request', { autoClose: 2000 });\n      return;\n    }\n    onFormSubmit(searchImage);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ ...INITIAL_STATE_FORM });\n  };\n\n  render() {\n    const { searchImage } = this.state;\n    return (\n      <form className=\"SearchForm\" onSubmit={this.handleSubmitForm}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          name=\"searchImage\"\n          value={searchImage}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import PropTypes from 'prop-types';\n\nimport SearchForm from '../SearchForm';\n\nimport './Searchbar.scss';\n\nconst Searchbar = ({ onFormSubmit }) => {\n  return (\n    <header className=\"Searchbar\">\n      <SearchForm onFormSubmit={onFormSubmit} />\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import './Loader.scss';\n\nconst Loader = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\n\nimport './ Magnifier.scss';\n\nconst Magnifier = ({ title }) => {\n  return (\n    <div className=\"Magnifier\">\n      <h3>{title}</h3>\n      <div className=\"loadingio-spinner-magnify-fbxdd69ymcl\">\n        <div className=\"ldio-fccru7n993\">\n          <div>\n            <div>\n              <div />\n              <div />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMagnifier.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Magnifier;\n","import PropTypes from 'prop-types';\n\nimport './Button.scss';\n\nconst Button = ({onLoadMore}) => {\n    return (\n        <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n            Load more\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport './Modal.scss';\n\nconst modalRoot = document.getElementById('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleCloseModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleCloseModal);\n  }\n\n  handleCloseModal = e => {\n    const { onClose } = this.props;\n    const { code, target, currentTarget } = e;\n    if (code === 'Escape' || currentTarget === target) {\n      onClose();\n    }\n  };\n\n  render() {\n    const { url, alt } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleCloseModal}>\n        <div className=\"Modal\">\n          <img src={url} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ImageGalleryItem.scss';\nimport Modal from '../Modal';\n\nclass ImageGalleryItem extends Component {\n  static propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n  };\n\n  state = {\n    modal: false,\n    url: '',\n    alt: '',\n  };\n\n  toggleModal = () => {\n    this.setState(({ modal }) => ({\n      modal: !modal,\n    }));\n  };\n\n  setOptionsModal = e => {\n    const { dataset, alt } = e.target;\n\n    this.setState({\n      url: dataset.source,\n      alt: alt,\n    });\n  };\n\n  render() {\n    const { images } = this.props;\n    const { modal, url, alt } = this.state;\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          {images &&\n            images.map(({ id, webformatURL, largeImageURL, tags }) => (\n              <li\n                className=\"ImageGalleryItem\"\n                key={id}\n                onClick={e => {\n                  this.toggleModal();\n                  this.setOptionsModal(e);\n                }}\n              >\n                <img\n                  src={webformatURL}\n                  alt={tags}\n                  data-source={largeImageURL}\n                  className=\"ImageGalleryItem-image\"\n                />\n              </li>\n            ))}\n        </ul>\n        {modal && <Modal url={url} alt={alt} onClose={this.toggleModal} />}\n      </>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import { toast } from 'react-toastify';\n\nconst api_service = {\n  per_page: 12,\n  APIkey: '18613871-d09d7f4d1ad86f8a51a1289a6',\n  baseURL: 'https://pixabay.com/api/?image_type=photo&orientation=horizontal',\n  async getResource(search, page) {\n    try {\n      const responce = await fetch(\n        `${this.baseURL}&q=${search}&page=${page}&per_page=${this.per_page}&key=${this.APIkey}`,\n      );\n      if (responce.ok) {\n        return await responce.json();\n      }\n      return Promise.reject(new Error(`Ошибка поиск ${search} пуст `));\n    } catch (error) {\n      throw toast.error(error, {\n        autoClose: 2000,\n      });\n    }\n  },\n};\nexport default api_service;\n","import {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {toast} from 'react-toastify';\nimport {Loader, Magnifier} from '../Loaders';\nimport Button from '../Button';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nimport ari_service from '../../API_service/api_service';\n\nimport './ImageGallery.scss';\n\nclass ImageGallery extends Component {\n    static propTypes = {\n        query: PropTypes.string.isRequired,\n    };\n\n    state = {\n        images: [],\n        error: null,\n        status: 'idle',\n        currentPage: 1,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const {query} = this.props;\n        const {currentPage} = this.state;\n\n        if (prevProps.query !== query) {\n            this.setState(\n                {\n                    status: 'pending',\n                    images: [],\n                    currentPage: 1,\n                },\n                this.getAPI,\n            );\n        }\n\n        if (prevState.currentPage !== currentPage) {\n            this.scrollToNextPage();\n        }\n    }\n\n    getAPI = () => {\n        const {query} = this.props;\n        const {currentPage} = this.state;\n        ari_service\n            .getResource(query, currentPage)\n            .then(images => {\n                const {hits} = images;\n                if (hits.length === 0) {\n                    toast.error('error', {autoClose: 2000});\n                    this.setState({status: 'rejected'});\n                    return;\n                }\n\n                this.setState(prevState => ({\n                    images: [...prevState.images, ...hits],\n                    status: 'resolved',\n                    currentPage: prevState.currentPage + 1,\n                }));\n            })\n            .catch(error => this.setState({error, status: 'rejected'}));\n    };\n\n    scrollToNextPage = () => {\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    };\n\n    render() {\n        const {images, error, status} = this.state;\n\n        if (status === 'idle')\n            return <Magnifier title={'Введите имя картинки для поиска'}/>;\n        if (status === 'pending') return <Loader/>;\n        if (status === 'rejected') {\n            return (\n                <>\n                    {error\n                        ? (error.message)\n                        : (<Magnifier title={'Ненайдено! Попробуйте еще'}/>)\n                    }\n                </>\n            );\n        }\n        if (status === 'resolved') {\n            return (\n                <>\n                    <ImageGalleryItem images={images}/>\n                    {images.length > 0 && <Button onLoadMore={this.getAPI}/>}\n                </>\n            );\n        }\n    }\n}\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './Component/Searchbar';\nimport ImageGallery from './Component/ImageGallery';\n\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    searchImage: '',\n  };\n\n  handleFormSearch = searchImage => {\n    this.setState({ searchImage });\n  };\n\n  render() {\n    const { searchImage } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onFormSubmit={this.handleFormSearch} />\n        <ImageGallery query={searchImage} />\n\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}